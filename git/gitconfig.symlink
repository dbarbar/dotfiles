[hub]
        protocol = https
[user]
        name = David Barbarisi
        email = davidbarbarisi@gmail.com
        signingkey = 0xE96F1390A9C61516

[credential]
        helper = osxkeychain

[alias]
        co = checkout
        promote = !$HOME/.dotfiles/bin/git-promote
        wtf     = !$HOME/.dotfiles/bin/git-wtf
        rank-contributors = !$HOME/.dotfiles/bin/git-rank-contributors
        count   = !git shortlog -sn
        lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

        # Find branches containing commit
        fb = "!f() { git branch -a --contains $1; }; f"

        # Find tags containing commit
        ft = "!f() { git describe --always --contains $1; }; f"

[color]
        # Use colors in Git commands that are capable of colored output when
        # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
        ui = auto

[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green

[color "diff"]
        meta = yellow bold
        commit = green bold
        frag = magenta bold
        old = red bold
        new = green bold
        whitespace = red reverse

[color "diff-highlight"]
        oldNormal = red bold
        oldHighlight = "red bold 52"
        newNormal = "green bold"
        newHighlight = "green bold 22"

[color "status"]
        added = yellow
        changed = green
        untracked = cyan

[core]
        # Use custom `.gitignore` and `.gitattributes`
        excludesfile = ~/.gitignore
        attributesfile = ~/.gitattributes

        autocrlf = input
        editor = subl -n -w
        safecrlf = true

        # Treat spaces before tabs and all kinds of trailing whitespace as an error
        # [default] trailing-space: looks for spaces at the end of a line
        # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
        whitespace = space-before-tab,-indent-with-non-tab,trailing-space

        # Make `git rebase` safer on OS X
        # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
        trustctime = false

        # insanely beautiful diffs
        pager = diff-so-fancy | less --tabs=4 -RFX

[merge]
        tool = Kaleidoscope

        # Include summaries of merged commits in newly created merge commit messages
        log = true

[mergetool]
        keepBackup = false

[mergetool "Kaleidoscope"]
        cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
        trustExitCode = true

[diff]
        tool = Kaleidoscope

        # Detect copies as well as renames
        renames = copies

[difftool]
        prompt = false

[difftool "Kaleidoscope"]
        cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[help]
        autocorrect = 1

[filter "media"]
        required = true
        clean = git media clean %f
        smudge = git media smudge %f

[push]
        default = simple
